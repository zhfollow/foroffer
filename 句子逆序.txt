题目描述
给定一个句子（只包含字母和空格）， 将句子中的单词位置反转，单词用空格分割, 单词之间只有一个空格，前后没有空格。 比如： （1） “hello xiao mi”-> “mi xiao hello”
输入描述:
输入数据有多组，每组占一行，包含一个句子(句子长度小于1000个字符)
输出描述:
对于每个测试示例，要求输出句子中单词反转后形成的句子
示例1
输入

hello xiao mi
输出

mi xiao hello

#include <iostream>
#include <string>
using namespace std;


int main()
{
	string scr;
	while (getline(cin, scr))
	{
		
		int n = scr.size();
		cout << n << endl;
		for (int i = 0,j=n-1;i<j; i++,j--)
		{
			char temp;
			temp = scr[i];
			scr[i] = scr[j];
			scr[j ] = temp;
		}

		for (int j = 0,i=0; j <= n; j++)
		{
			if (scr[j] == ' ' || scr[j] == '\0')
			{
				int k = j;
				for (i; i<k; i++, k--)
				{
					char temp;
					temp = scr[i];
					scr[i] = scr[k-1];
					scr[k-1] = temp;
				}
				i = j + 1;
			}
		}
		cout << scr;
		
	}
}




第二种方法
#include <iostream>
#include <string>
#include<algorithm>
using namespace std;


int main()
{
	string scr;
	while (getline(cin, scr))
	{
		
		int n = scr.size();
		cout << n << endl;
		reverse(scr.begin(), scr.end());

		for (int j = 0,i=0; j <= n; j++)
		{
			if (scr[j] == ' ' || scr[j] == '\0')
			{
				reverse(scr.begin() + i, scr.begin() + j);
				i = j + 1;
			}
		}
		cout << scr;
		
	}
}
