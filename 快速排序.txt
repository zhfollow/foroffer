#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

void quickSort(int a[],int low,int high);
int partition(int a[], int low, int high);

void swap(int *a, int *b)
{
	int c;
	c = *a;
	*a = *b;
	*b = c;

};
int main()
{
	/*vector<int> a{5,6,7,3,9,1,4,6,8,9};
	for (auto iter = a.begin(); iter != a.end(); iter++)
		cout << *iter<<endl;
	int size = a.size();
	cout << size;
	*/
	int a[11] = { 5,6,7,3,9,1,4,6,8,20,17 };
	//sort(a,a+10);
	quickSort(a, 0,10);
	for (int i = 0; i < 11; i++)
		cout << a[i];

}
int partition(int a[], int low, int high)
{
	int k = a[low];
	while (low < high)
	{
		while (low<high&&a[high]>=k)
		{
			high--;
		}
		swap(&a[low], &a[high]);
		while (low < high&&a[low] <= k)
			low++;
		swap(&a[low],&a[high]);

	}
	return high;

}

void quickSort(int a[],int low,int high)
{
	if (low < high)
	{
		int mid = partition(a, low, high);
		quickSort(a, low, mid - 1);
		quickSort(a, mid + 1, high);
	}

}